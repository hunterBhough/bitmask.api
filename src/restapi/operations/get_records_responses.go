// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hunterBhough/go-doge/src/models"
)

// GetRecordsOKCode is the HTTP code returned for type GetRecordsOK
const GetRecordsOKCode int = 200

/*GetRecordsOK successful operation

swagger:response getRecordsOK
*/
type GetRecordsOK struct {

	/*
	  In: Body
	*/
	Payload []models.TransmissionType `json:"body,omitempty"`
}

// NewGetRecordsOK creates GetRecordsOK with default headers values
func NewGetRecordsOK() *GetRecordsOK {
	return &GetRecordsOK{}
}

// WithPayload adds the payload to the get records o k response
func (o *GetRecordsOK) WithPayload(payload []models.TransmissionType) *GetRecordsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get records o k response
func (o *GetRecordsOK) SetPayload(payload []models.TransmissionType) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]models.TransmissionType, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetRecordsBadRequestCode is the HTTP code returned for type GetRecordsBadRequest
const GetRecordsBadRequestCode int = 400

/*GetRecordsBadRequest Invalid or not enough inputs.

swagger:response getRecordsBadRequest
*/
type GetRecordsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRecordsBadRequest creates GetRecordsBadRequest with default headers values
func NewGetRecordsBadRequest() *GetRecordsBadRequest {
	return &GetRecordsBadRequest{}
}

// WithPayload adds the payload to the get records bad request response
func (o *GetRecordsBadRequest) WithPayload(payload *models.Error) *GetRecordsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get records bad request response
func (o *GetRecordsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecordsTooManyRequestsCode is the HTTP code returned for type GetRecordsTooManyRequests
const GetRecordsTooManyRequestsCode int = 429

/*GetRecordsTooManyRequests Too many requests.

swagger:response getRecordsTooManyRequests
*/
type GetRecordsTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRecordsTooManyRequests creates GetRecordsTooManyRequests with default headers values
func NewGetRecordsTooManyRequests() *GetRecordsTooManyRequests {
	return &GetRecordsTooManyRequests{}
}

// WithPayload adds the payload to the get records too many requests response
func (o *GetRecordsTooManyRequests) WithPayload(payload *models.Error) *GetRecordsTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get records too many requests response
func (o *GetRecordsTooManyRequests) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordsTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
