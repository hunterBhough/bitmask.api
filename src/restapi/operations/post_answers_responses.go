// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hunterBhough/bitmask.api/models"
)

// PostAnswersOKCode is the HTTP code returned for type PostAnswersOK
const PostAnswersOKCode int = 200

/*PostAnswersOK successful operation

swagger:response postAnswersOK
*/
type PostAnswersOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostAnswersOK creates PostAnswersOK with default headers values
func NewPostAnswersOK() *PostAnswersOK {
	return &PostAnswersOK{}
}

// WithPayload adds the payload to the post answers o k response
func (o *PostAnswersOK) WithPayload(payload string) *PostAnswersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post answers o k response
func (o *PostAnswersOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAnswersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PostAnswersBadRequestCode is the HTTP code returned for type PostAnswersBadRequest
const PostAnswersBadRequestCode int = 400

/*PostAnswersBadRequest Invalid or not enough inputs.

swagger:response postAnswersBadRequest
*/
type PostAnswersBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAnswersBadRequest creates PostAnswersBadRequest with default headers values
func NewPostAnswersBadRequest() *PostAnswersBadRequest {
	return &PostAnswersBadRequest{}
}

// WithPayload adds the payload to the post answers bad request response
func (o *PostAnswersBadRequest) WithPayload(payload *models.Error) *PostAnswersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post answers bad request response
func (o *PostAnswersBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAnswersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAnswersTooManyRequestsCode is the HTTP code returned for type PostAnswersTooManyRequests
const PostAnswersTooManyRequestsCode int = 429

/*PostAnswersTooManyRequests Too many requests.

swagger:response postAnswersTooManyRequests
*/
type PostAnswersTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAnswersTooManyRequests creates PostAnswersTooManyRequests with default headers values
func NewPostAnswersTooManyRequests() *PostAnswersTooManyRequests {
	return &PostAnswersTooManyRequests{}
}

// WithPayload adds the payload to the post answers too many requests response
func (o *PostAnswersTooManyRequests) WithPayload(payload *models.Error) *PostAnswersTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post answers too many requests response
func (o *PostAnswersTooManyRequests) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAnswersTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
